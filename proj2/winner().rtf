{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
}
{\colortbl;\red255\green255\blue255;\red153\green168\blue186;\red32\green32\blue32;\red254\green187\blue91;
\red191\green100\blue38;\red86\green132\blue173;\red133\green96\blue154;\red109\green109\blue109;\red191\green100\blue38;
\red32\green32\blue32;\red254\green187\blue91;\red153\green168\blue186;\red133\green96\blue154;\red86\green132\blue173;
\red109\green109\blue109;\red152\green182\blue28;}
{\*\expandedcolortbl;;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c99608\c73333\c35686;
\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c52157\c37647\c60392;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c74902\c39216\c14902;
\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c52157\c37647\c60392;\csgenericrgb\c33725\c51765\c67843;
\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c59608\c71373\c10980;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3    
\f1 Piece \cf4 winner\cf2 () \{\
\
        Iterator<Move> amazonWin = legalMoves(turn().opponent())\cf5 ;\
        int \cf2 numMoves = \cf6 0\cf5 ;\
        if \cf2 (\cf7 _winner \cf2 == \cf5 null\cf2 ) \{\
            \cf5 while \cf2 (amazonWin.hasNext()) \{\
                Move myMove = amazonWin.next()\cf5 ;\
                \cf2 numMoves++\cf5 ;\
            \cf2 \}\
\
            \cf5 if \cf2 (numMoves == \cf6 0\cf2 ) \{\
                \cf7 _winner \cf2 = turn()\cf5 ;\
                return \cf7 _winner\cf5 ;\
            \cf2 \}\
        \}\
\
\cf8 //        int numOpponent = 0;\
//\
//        for (Map.Entry<Square, Piece> place : _gameBoard.entrySet()) \{\
//            Square square = place.getKey();\
//            Piece piece = place.getValue();\
//\
//            if (piece == turn().opponent() && checkSurround(square)) \{\
//                numOpponent++;\
//\
////                if (checkSurround(square) && numOpponent > 3) \{\
////                    _winner = turn();\
////                    return _winner;\
////                \}\
//            \}\
//        \}\
//\
        \cf5 return null;\
    \cf2 \}\
\
\
\
\
I also made this change for _turn and I\'92ve yet to get an infinite loop:\
\
\cf9 \cb10 void \cf11 undo\cf12 () \{\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf12     \cf9 if \cf12 (\cf13 _moves\cf12 .size() > \cf14 0\cf12 ) \{\
        Move undoMove = \cf13 _moves\cf12 .pop()\cf9 ;\
        \cf12 Piece toUndo = get(undoMove.to())\cf9 ;\
\
        \cf12 put(
\f2\i \cf13 EMPTY
\f1\i0 \cf9 , \cf12 undoMove.spear())\cf9 ;\
        \cf12 put(
\f2\i \cf13 EMPTY
\f1\i0 \cf9 , \cf12 undoMove.to())\cf9 ;\
        \cf12 put(toUndo\cf9 , \cf12 undoMove.from())\cf9 ;\
        \cf13 _turn \cf12 = get(undoMove.from()).opponent()\cf9 ; \cf15 //
\f2\i \cf16 fixme just changed from _turn = turn().opponent()\
    
\f1\i0 \cf12 \}\
\}\
}